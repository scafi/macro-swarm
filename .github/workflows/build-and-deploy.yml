name: CI

on:
  push:
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'renovate.json'
      - '.gitignore'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
jobs:
  Build-and-Test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows] # todo, add mac and windows ?
        jvm_version: # Update using LTSs and latest
          # - adopt@1.8,
          - adopt@1.11
          - openjdk@1.17
    runs-on: ${{ matrix.os }}-latest
    concurrency:
      group: ${{ github.workflow }}-build-${{ matrix.os }}-${{ matrix.jvm_version }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4.1.4
      - name: Setup Scala and JDK
        with:
          java-version: ${{ matrix.jvm_version }}
        uses: olafurpg/setup-scala@v14
      - name: Sbt run tests
        shell: bash # for windows
        run: sbt +test
      - name: Sbt check publish artifacts
        shell: bash
        run: sbt +publishLocal

  # Try-Doc:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v4.1.1
  #    - name: Setup Scala and JDK
  #      uses: olafurpg/setup-scala@v14
  #      with:
  #        java-version: openjdk@1.17
  #    - name: Sbt generate scaladoc
  #      run: sbt unidoc

  # Coverage:
  #  runs-on: ubuntu-latest
  #  needs: [Build-and-Test]
  #  steps:
  #    - uses: actions/checkout@v4.1.1
  #    - name: Setup Scala and JDK
  #      uses: olafurpg/setup-scala@v14
  #      with:
  #        java-version: openjdk@1.17
  #    - name: Sbt run tests
  #      shell: bash # for windows
  #     run: sbt coverage test
  #    - name: Coverage report
  #      shell: bash
  #      run: sbt coverageReport
  #    - name: Upload coverage to Codecov
  #      uses: codecov/codecov-action@v3.1.4
  #      with:
  #        token: ${{ secrets.CODECOV_TOKEN }}
  #        fail_ci_if_error: true

  Release:
    runs-on: ubuntu-latest
    needs: [Build-and-Test]
    if: github.event_name != 'pull_request'
    concurrency:
      group: release
    steps:
      - uses: danysk/action-checkout@0.2.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17
      - name: Run Semantic-Release
        run: |
          npm install
          npx semantic-release
        id: release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.release.outputs.has-released
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.6
      - if: steps.release.outputs.has-released
        run: gem install 'jekyll:4.2.1' bundler
      - if: steps.release.outputs.has-released
        run: jekyll --version
      - if: steps.release.outputs.has-released
        run: sbt makeMicrosite; sbt doc
      - if: steps.release.outputs.has-released
        run: sbt makeMicrosite; sbt doc
      - if: steps.release.outputs.has-released
        run: cp -r core/target/scala-2.13/api target/site/api
      - if: steps.release.outputs.has-released
        name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: target/site
